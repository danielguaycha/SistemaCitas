#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProisProject.Model.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="cmsystem")]
	public partial class PostDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertConsulta(Consulta instance);
    partial void UpdateConsulta(Consulta instance);
    partial void DeleteConsulta(Consulta instance);
    partial void InsertControlLog(ControlLog instance);
    partial void UpdateControlLog(ControlLog instance);
    partial void DeleteControlLog(ControlLog instance);
    partial void InsertExEcografico(ExEcografico instance);
    partial void UpdateExEcografico(ExEcografico instance);
    partial void DeleteExEcografico(ExEcografico instance);
    partial void InsertExLaboratorio(ExLaboratorio instance);
    partial void UpdateExLaboratorio(ExLaboratorio instance);
    partial void DeleteExLaboratorio(ExLaboratorio instance);
    partial void InsertMedico(Medico instance);
    partial void UpdateMedico(Medico instance);
    partial void DeleteMedico(Medico instance);
    partial void InsertPermisos(Permisos instance);
    partial void UpdatePermisos(Permisos instance);
    partial void DeletePermisos(Permisos instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertCita(Cita instance);
    partial void UpdateCita(Cita instance);
    partial void DeleteCita(Cita instance);
    partial void InsertEspecialidad(Especialidad instance);
    partial void UpdateEspecialidad(Especialidad instance);
    partial void DeleteEspecialidad(Especialidad instance);
    partial void InsertPersona(Persona instance);
    partial void UpdatePersona(Persona instance);
    partial void DeletePersona(Persona instance);
    partial void InsertRol_Permiso(Rol_Permiso instance);
    partial void UpdateRol_Permiso(Rol_Permiso instance);
    partial void DeleteRol_Permiso(Rol_Permiso instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    #endregion
		
		public PostDataContext() : 
				base(global::ProisProject.Properties.Settings.Default.cmsystemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PostDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PostDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PostDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PostDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Consulta> Consulta
		{
			get
			{
				return this.GetTable<Consulta>();
			}
		}
		
		public System.Data.Linq.Table<ControlLog> ControlLog
		{
			get
			{
				return this.GetTable<ControlLog>();
			}
		}
		
		public System.Data.Linq.Table<ExEcografico> ExEcografico
		{
			get
			{
				return this.GetTable<ExEcografico>();
			}
		}
		
		public System.Data.Linq.Table<ExLaboratorio> ExLaboratorio
		{
			get
			{
				return this.GetTable<ExLaboratorio>();
			}
		}
		
		public System.Data.Linq.Table<Labparametro> Labparametro
		{
			get
			{
				return this.GetTable<Labparametro>();
			}
		}
		
		public System.Data.Linq.Table<Medico> Medico
		{
			get
			{
				return this.GetTable<Medico>();
			}
		}
		
		public System.Data.Linq.Table<Permisos> Permisos
		{
			get
			{
				return this.GetTable<Permisos>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Cita> Cita
		{
			get
			{
				return this.GetTable<Cita>();
			}
		}
		
		public System.Data.Linq.Table<Especialidad> Especialidad
		{
			get
			{
				return this.GetTable<Especialidad>();
			}
		}
		
		public System.Data.Linq.Table<Persona> Persona
		{
			get
			{
				return this.GetTable<Persona>();
			}
		}
		
		public System.Data.Linq.Table<Rol_Permiso> Rol_Permiso
		{
			get
			{
				return this.GetTable<Rol_Permiso>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rol
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consulta")]
	public partial class Consulta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_consulta;
		
		private string _diagnostico;
		
		private string _medicacion;
		
		private string _prescripcion;
		
		private System.Nullable<long> _id_cita;
		
		private System.Nullable<long> _id_exlab;
		
		private System.Nullable<long> _id_execo;
		
		private EntityRef<ExEcografico> _ExEcografico;
		
		private EntityRef<ExLaboratorio> _ExLaboratorio;
		
		private EntityRef<Cita> _Cita;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_consultaChanging(long value);
    partial void Onid_consultaChanged();
    partial void OndiagnosticoChanging(string value);
    partial void OndiagnosticoChanged();
    partial void OnmedicacionChanging(string value);
    partial void OnmedicacionChanged();
    partial void OnprescripcionChanging(string value);
    partial void OnprescripcionChanged();
    partial void Onid_citaChanging(System.Nullable<long> value);
    partial void Onid_citaChanged();
    partial void Onid_exlabChanging(System.Nullable<long> value);
    partial void Onid_exlabChanged();
    partial void Onid_execoChanging(System.Nullable<long> value);
    partial void Onid_execoChanged();
    #endregion
		
		public Consulta()
		{
			this._ExEcografico = default(EntityRef<ExEcografico>);
			this._ExLaboratorio = default(EntityRef<ExLaboratorio>);
			this._Cita = default(EntityRef<Cita>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_consulta", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_consulta
		{
			get
			{
				return this._id_consulta;
			}
			set
			{
				if ((this._id_consulta != value))
				{
					this.Onid_consultaChanging(value);
					this.SendPropertyChanging();
					this._id_consulta = value;
					this.SendPropertyChanged("id_consulta");
					this.Onid_consultaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diagnostico", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string diagnostico
		{
			get
			{
				return this._diagnostico;
			}
			set
			{
				if ((this._diagnostico != value))
				{
					this.OndiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._diagnostico = value;
					this.SendPropertyChanged("diagnostico");
					this.OndiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medicacion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string medicacion
		{
			get
			{
				return this._medicacion;
			}
			set
			{
				if ((this._medicacion != value))
				{
					this.OnmedicacionChanging(value);
					this.SendPropertyChanging();
					this._medicacion = value;
					this.SendPropertyChanged("medicacion");
					this.OnmedicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prescripcion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string prescripcion
		{
			get
			{
				return this._prescripcion;
			}
			set
			{
				if ((this._prescripcion != value))
				{
					this.OnprescripcionChanging(value);
					this.SendPropertyChanging();
					this._prescripcion = value;
					this.SendPropertyChanged("prescripcion");
					this.OnprescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cita", DbType="BigInt")]
		public System.Nullable<long> id_cita
		{
			get
			{
				return this._id_cita;
			}
			set
			{
				if ((this._id_cita != value))
				{
					if (this._Cita.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_citaChanging(value);
					this.SendPropertyChanging();
					this._id_cita = value;
					this.SendPropertyChanged("id_cita");
					this.Onid_citaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_exlab", DbType="BigInt")]
		public System.Nullable<long> id_exlab
		{
			get
			{
				return this._id_exlab;
			}
			set
			{
				if ((this._id_exlab != value))
				{
					if (this._ExLaboratorio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_exlabChanging(value);
					this.SendPropertyChanging();
					this._id_exlab = value;
					this.SendPropertyChanged("id_exlab");
					this.Onid_exlabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_execo", DbType="BigInt")]
		public System.Nullable<long> id_execo
		{
			get
			{
				return this._id_execo;
			}
			set
			{
				if ((this._id_execo != value))
				{
					if (this._ExEcografico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_execoChanging(value);
					this.SendPropertyChanging();
					this._id_execo = value;
					this.SendPropertyChanged("id_execo");
					this.Onid_execoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExEcografico_Consulta", Storage="_ExEcografico", ThisKey="id_execo", OtherKey="id_execo", IsForeignKey=true)]
		public ExEcografico ExEcografico
		{
			get
			{
				return this._ExEcografico.Entity;
			}
			set
			{
				ExEcografico previousValue = this._ExEcografico.Entity;
				if (((previousValue != value) 
							|| (this._ExEcografico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExEcografico.Entity = null;
						previousValue.Consulta.Remove(this);
					}
					this._ExEcografico.Entity = value;
					if ((value != null))
					{
						value.Consulta.Add(this);
						this._id_execo = value.id_execo;
					}
					else
					{
						this._id_execo = default(Nullable<long>);
					}
					this.SendPropertyChanged("ExEcografico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExLaboratorio_Consulta", Storage="_ExLaboratorio", ThisKey="id_exlab", OtherKey="id_exlab", IsForeignKey=true)]
		public ExLaboratorio ExLaboratorio
		{
			get
			{
				return this._ExLaboratorio.Entity;
			}
			set
			{
				ExLaboratorio previousValue = this._ExLaboratorio.Entity;
				if (((previousValue != value) 
							|| (this._ExLaboratorio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExLaboratorio.Entity = null;
						previousValue.Consulta.Remove(this);
					}
					this._ExLaboratorio.Entity = value;
					if ((value != null))
					{
						value.Consulta.Add(this);
						this._id_exlab = value.id_exlab;
					}
					else
					{
						this._id_exlab = default(Nullable<long>);
					}
					this.SendPropertyChanged("ExLaboratorio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cita_Consulta", Storage="_Cita", ThisKey="id_cita", OtherKey="id_cita", IsForeignKey=true)]
		public Cita Cita
		{
			get
			{
				return this._Cita.Entity;
			}
			set
			{
				Cita previousValue = this._Cita.Entity;
				if (((previousValue != value) 
							|| (this._Cita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cita.Entity = null;
						previousValue.Consulta.Remove(this);
					}
					this._Cita.Entity = value;
					if ((value != null))
					{
						value.Consulta.Add(this);
						this._id_cita = value.id_cita;
					}
					else
					{
						this._id_cita = default(Nullable<long>);
					}
					this.SendPropertyChanged("Cita");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ControlLog")]
	public partial class ControlLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_control;
		
		private string _nivel;
		
		private string _descripcion;
		
		private System.Nullable<int> _status;
		
		private System.Nullable<System.DateTime> _fecha;
		
		private System.Nullable<long> _id_usuario;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_controlChanging(long value);
    partial void Onid_controlChanged();
    partial void OnnivelChanging(string value);
    partial void OnnivelChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OnfechaChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaChanged();
    partial void Onid_usuarioChanging(System.Nullable<long> value);
    partial void Onid_usuarioChanged();
    #endregion
		
		public ControlLog()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_control", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_control
		{
			get
			{
				return this._id_control;
			}
			set
			{
				if ((this._id_control != value))
				{
					this.Onid_controlChanging(value);
					this.SendPropertyChanging();
					this._id_control = value;
					this.SendPropertyChanged("id_control");
					this.Onid_controlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nivel", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string nivel
		{
			get
			{
				return this._nivel;
			}
			set
			{
				if ((this._nivel != value))
				{
					this.OnnivelChanging(value);
					this.SendPropertyChanging();
					this._nivel = value;
					this.SendPropertyChanged("nivel");
					this.OnnivelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", DbType="BigInt")]
		public System.Nullable<long> id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ControlLog", Storage="_Usuario", ThisKey="id_usuario", OtherKey="id_usuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.ControlLog.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.ControlLog.Add(this);
						this._id_usuario = value.id_usuario;
					}
					else
					{
						this._id_usuario = default(Nullable<long>);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExEcografico")]
	public partial class ExEcografico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_execo;
		
		private string _datos_clinicos;
		
		private string _diagnostico;
		
		private string _solicitud;
		
		private EntitySet<Consulta> _Consulta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_execoChanging(long value);
    partial void Onid_execoChanged();
    partial void Ondatos_clinicosChanging(string value);
    partial void Ondatos_clinicosChanged();
    partial void OndiagnosticoChanging(string value);
    partial void OndiagnosticoChanged();
    partial void OnsolicitudChanging(string value);
    partial void OnsolicitudChanged();
    #endregion
		
		public ExEcografico()
		{
			this._Consulta = new EntitySet<Consulta>(new Action<Consulta>(this.attach_Consulta), new Action<Consulta>(this.detach_Consulta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_execo", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_execo
		{
			get
			{
				return this._id_execo;
			}
			set
			{
				if ((this._id_execo != value))
				{
					this.Onid_execoChanging(value);
					this.SendPropertyChanging();
					this._id_execo = value;
					this.SendPropertyChanged("id_execo");
					this.Onid_execoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datos_clinicos", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string datos_clinicos
		{
			get
			{
				return this._datos_clinicos;
			}
			set
			{
				if ((this._datos_clinicos != value))
				{
					this.Ondatos_clinicosChanging(value);
					this.SendPropertyChanging();
					this._datos_clinicos = value;
					this.SendPropertyChanged("datos_clinicos");
					this.Ondatos_clinicosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diagnostico", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string diagnostico
		{
			get
			{
				return this._diagnostico;
			}
			set
			{
				if ((this._diagnostico != value))
				{
					this.OndiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._diagnostico = value;
					this.SendPropertyChanged("diagnostico");
					this.OndiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solicitud", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string solicitud
		{
			get
			{
				return this._solicitud;
			}
			set
			{
				if ((this._solicitud != value))
				{
					this.OnsolicitudChanging(value);
					this.SendPropertyChanging();
					this._solicitud = value;
					this.SendPropertyChanged("solicitud");
					this.OnsolicitudChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExEcografico_Consulta", Storage="_Consulta", ThisKey="id_execo", OtherKey="id_execo")]
		public EntitySet<Consulta> Consulta
		{
			get
			{
				return this._Consulta;
			}
			set
			{
				this._Consulta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consulta(Consulta entity)
		{
			this.SendPropertyChanging();
			entity.ExEcografico = this;
		}
		
		private void detach_Consulta(Consulta entity)
		{
			this.SendPropertyChanging();
			entity.ExEcografico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExLaboratorio")]
	public partial class ExLaboratorio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_exlab;
		
		private System.Nullable<int> _status;
		
		private System.Nullable<int> _interno;
		
		private EntitySet<Consulta> _Consulta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_exlabChanging(long value);
    partial void Onid_exlabChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OninternoChanging(System.Nullable<int> value);
    partial void OninternoChanged();
    #endregion
		
		public ExLaboratorio()
		{
			this._Consulta = new EntitySet<Consulta>(new Action<Consulta>(this.attach_Consulta), new Action<Consulta>(this.detach_Consulta));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_exlab", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_exlab
		{
			get
			{
				return this._id_exlab;
			}
			set
			{
				if ((this._id_exlab != value))
				{
					this.Onid_exlabChanging(value);
					this.SendPropertyChanging();
					this._id_exlab = value;
					this.SendPropertyChanged("id_exlab");
					this.Onid_exlabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interno", DbType="Int")]
		public System.Nullable<int> interno
		{
			get
			{
				return this._interno;
			}
			set
			{
				if ((this._interno != value))
				{
					this.OninternoChanging(value);
					this.SendPropertyChanging();
					this._interno = value;
					this.SendPropertyChanged("interno");
					this.OninternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExLaboratorio_Consulta", Storage="_Consulta", ThisKey="id_exlab", OtherKey="id_exlab")]
		public EntitySet<Consulta> Consulta
		{
			get
			{
				return this._Consulta;
			}
			set
			{
				this._Consulta.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consulta(Consulta entity)
		{
			this.SendPropertyChanging();
			entity.ExLaboratorio = this;
		}
		
		private void detach_Consulta(Consulta entity)
		{
			this.SendPropertyChanging();
			entity.ExLaboratorio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Labparametro")]
	public partial class Labparametro
	{
		
		private string _tipo;
		
		private System.Nullable<long> _id_exlab;
		
		public Labparametro()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(20)")]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this._tipo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_exlab", DbType="BigInt")]
		public System.Nullable<long> id_exlab
		{
			get
			{
				return this._id_exlab;
			}
			set
			{
				if ((this._id_exlab != value))
				{
					this._id_exlab = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Medico")]
	public partial class Medico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_medico;
		
		private System.Nullable<long> _id_person;
		
		private System.Nullable<int> _id_especialidad;
		
		private string _titulo;
		
		private System.Nullable<int> _status;
		
		private EntitySet<Cita> _Cita;
		
		private EntityRef<Especialidad> _Especialidad;
		
		private EntityRef<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_medicoChanging(int value);
    partial void Onid_medicoChanged();
    partial void Onid_personChanging(System.Nullable<long> value);
    partial void Onid_personChanged();
    partial void Onid_especialidadChanging(System.Nullable<int> value);
    partial void Onid_especialidadChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public Medico()
		{
			this._Cita = new EntitySet<Cita>(new Action<Cita>(this.attach_Cita), new Action<Cita>(this.detach_Cita));
			this._Especialidad = default(EntityRef<Especialidad>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_medico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_medico
		{
			get
			{
				return this._id_medico;
			}
			set
			{
				if ((this._id_medico != value))
				{
					this.Onid_medicoChanging(value);
					this.SendPropertyChanging();
					this._id_medico = value;
					this.SendPropertyChanged("id_medico");
					this.Onid_medicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_person", DbType="BigInt")]
		public System.Nullable<long> id_person
		{
			get
			{
				return this._id_person;
			}
			set
			{
				if ((this._id_person != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personChanging(value);
					this.SendPropertyChanging();
					this._id_person = value;
					this.SendPropertyChanged("id_person");
					this.Onid_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_especialidad", DbType="Int")]
		public System.Nullable<int> id_especialidad
		{
			get
			{
				return this._id_especialidad;
			}
			set
			{
				if ((this._id_especialidad != value))
				{
					if (this._Especialidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_especialidadChanging(value);
					this.SendPropertyChanging();
					this._id_especialidad = value;
					this.SendPropertyChanged("id_especialidad");
					this.Onid_especialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulo", DbType="VarChar(100)")]
		public string titulo
		{
			get
			{
				return this._titulo;
			}
			set
			{
				if ((this._titulo != value))
				{
					this.OntituloChanging(value);
					this.SendPropertyChanging();
					this._titulo = value;
					this.SendPropertyChanged("titulo");
					this.OntituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medico_Cita", Storage="_Cita", ThisKey="id_medico", OtherKey="id_medico")]
		public EntitySet<Cita> Cita
		{
			get
			{
				return this._Cita;
			}
			set
			{
				this._Cita.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidad_Medico", Storage="_Especialidad", ThisKey="id_especialidad", OtherKey="id_especialidad", IsForeignKey=true)]
		public Especialidad Especialidad
		{
			get
			{
				return this._Especialidad.Entity;
			}
			set
			{
				Especialidad previousValue = this._Especialidad.Entity;
				if (((previousValue != value) 
							|| (this._Especialidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Especialidad.Entity = null;
						previousValue.Medico.Remove(this);
					}
					this._Especialidad.Entity = value;
					if ((value != null))
					{
						value.Medico.Add(this);
						this._id_especialidad = value.id_especialidad;
					}
					else
					{
						this._id_especialidad = default(Nullable<int>);
					}
					this.SendPropertyChanged("Especialidad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Medico", Storage="_Persona", ThisKey="id_person", OtherKey="id_person", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Medico.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Medico.Add(this);
						this._id_person = value.id_person;
					}
					else
					{
						this._id_person = default(Nullable<long>);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cita(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Medico = this;
		}
		
		private void detach_Cita(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Medico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permisos")]
	public partial class Permisos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_permiso;
		
		private string _descripcion;
		
		private string _valor;
		
		private EntitySet<Rol_Permiso> _Rol_Permiso;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_permisoChanging(int value);
    partial void Onid_permisoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnvalorChanging(string value);
    partial void OnvalorChanged();
    #endregion
		
		public Permisos()
		{
			this._Rol_Permiso = new EntitySet<Rol_Permiso>(new Action<Rol_Permiso>(this.attach_Rol_Permiso), new Action<Rol_Permiso>(this.detach_Rol_Permiso));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_permiso", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_permiso
		{
			get
			{
				return this._id_permiso;
			}
			set
			{
				if ((this._id_permiso != value))
				{
					this.Onid_permisoChanging(value);
					this.SendPropertyChanging();
					this._id_permiso = value;
					this.SendPropertyChanged("id_permiso");
					this.Onid_permisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(100)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valor", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string valor
		{
			get
			{
				return this._valor;
			}
			set
			{
				if ((this._valor != value))
				{
					this.OnvalorChanging(value);
					this.SendPropertyChanging();
					this._valor = value;
					this.SendPropertyChanged("valor");
					this.OnvalorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permisos_Rol_Permiso", Storage="_Rol_Permiso", ThisKey="id_permiso", OtherKey="id_permiso")]
		public EntitySet<Rol_Permiso> Rol_Permiso
		{
			get
			{
				return this._Rol_Permiso;
			}
			set
			{
				this._Rol_Permiso.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rol_Permiso(Rol_Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Permisos = this;
		}
		
		private void detach_Rol_Permiso(Rol_Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Permisos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_usuario;
		
		private System.Nullable<long> _id_person;
		
		private System.Nullable<int> _id_rol;
		
		private string _password;
		
		private System.Nullable<int> _status;
		
		private EntitySet<ControlLog> _ControlLog;
		
		private EntityRef<Persona> _Persona;
		
		private EntityRef<Rol> _Rol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_usuarioChanging(long value);
    partial void Onid_usuarioChanged();
    partial void Onid_personChanging(System.Nullable<long> value);
    partial void Onid_personChanged();
    partial void Onid_rolChanging(System.Nullable<int> value);
    partial void Onid_rolChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public Usuario()
		{
			this._ControlLog = new EntitySet<ControlLog>(new Action<ControlLog>(this.attach_ControlLog), new Action<ControlLog>(this.detach_ControlLog));
			this._Persona = default(EntityRef<Persona>);
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_person", DbType="BigInt")]
		public System.Nullable<long> id_person
		{
			get
			{
				return this._id_person;
			}
			set
			{
				if ((this._id_person != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personChanging(value);
					this.SendPropertyChanging();
					this._id_person = value;
					this.SendPropertyChanged("id_person");
					this.Onid_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int")]
		public System.Nullable<int> id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_ControlLog", Storage="_ControlLog", ThisKey="id_usuario", OtherKey="id_usuario")]
		public EntitySet<ControlLog> ControlLog
		{
			get
			{
				return this._ControlLog;
			}
			set
			{
				this._ControlLog.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Usuario", Storage="_Persona", ThisKey="id_person", OtherKey="id_person", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._id_person = value.id_person;
					}
					else
					{
						this._id_person = default(Nullable<long>);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuario", Storage="_Rol", ThisKey="id_rol", OtherKey="id_rol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.Usuario.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.Usuario.Add(this);
						this._id_rol = value.id_rol;
					}
					else
					{
						this._id_rol = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ControlLog(ControlLog entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_ControlLog(ControlLog entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cita")]
	public partial class Cita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_cita;
		
		private System.Nullable<int> _id_medico;
		
		private System.Nullable<long> _id_person;
		
		private System.Nullable<System.DateTime> _fecha;
		
		private System.Nullable<decimal> _precio;
		
		private System.Nullable<int> _status;
		
		private System.Nullable<decimal> _retencion;
		
		private EntitySet<Consulta> _Consulta;
		
		private EntityRef<Medico> _Medico;
		
		private EntityRef<Persona> _Persona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_citaChanging(long value);
    partial void Onid_citaChanged();
    partial void Onid_medicoChanging(System.Nullable<int> value);
    partial void Onid_medicoChanged();
    partial void Onid_personChanging(System.Nullable<long> value);
    partial void Onid_personChanged();
    partial void OnfechaChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaChanged();
    partial void OnprecioChanging(System.Nullable<decimal> value);
    partial void OnprecioChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OnretencionChanging(System.Nullable<decimal> value);
    partial void OnretencionChanged();
    #endregion
		
		public Cita()
		{
			this._Consulta = new EntitySet<Consulta>(new Action<Consulta>(this.attach_Consulta), new Action<Consulta>(this.detach_Consulta));
			this._Medico = default(EntityRef<Medico>);
			this._Persona = default(EntityRef<Persona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cita", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_cita
		{
			get
			{
				return this._id_cita;
			}
			set
			{
				if ((this._id_cita != value))
				{
					this.Onid_citaChanging(value);
					this.SendPropertyChanging();
					this._id_cita = value;
					this.SendPropertyChanged("id_cita");
					this.Onid_citaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_medico", DbType="Int")]
		public System.Nullable<int> id_medico
		{
			get
			{
				return this._id_medico;
			}
			set
			{
				if ((this._id_medico != value))
				{
					if (this._Medico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_medicoChanging(value);
					this.SendPropertyChanging();
					this._id_medico = value;
					this.SendPropertyChanged("id_medico");
					this.Onid_medicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_person", DbType="BigInt")]
		public System.Nullable<long> id_person
		{
			get
			{
				return this._id_person;
			}
			set
			{
				if ((this._id_person != value))
				{
					if (this._Persona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_personChanging(value);
					this.SendPropertyChanging();
					this._id_person = value;
					this.SendPropertyChanged("id_person");
					this.Onid_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_retencion", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> retencion
		{
			get
			{
				return this._retencion;
			}
			set
			{
				if ((this._retencion != value))
				{
					this.OnretencionChanging(value);
					this.SendPropertyChanging();
					this._retencion = value;
					this.SendPropertyChanged("retencion");
					this.OnretencionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cita_Consulta", Storage="_Consulta", ThisKey="id_cita", OtherKey="id_cita")]
		public EntitySet<Consulta> Consulta
		{
			get
			{
				return this._Consulta;
			}
			set
			{
				this._Consulta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Medico_Cita", Storage="_Medico", ThisKey="id_medico", OtherKey="id_medico", IsForeignKey=true)]
		public Medico Medico
		{
			get
			{
				return this._Medico.Entity;
			}
			set
			{
				Medico previousValue = this._Medico.Entity;
				if (((previousValue != value) 
							|| (this._Medico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Medico.Entity = null;
						previousValue.Cita.Remove(this);
					}
					this._Medico.Entity = value;
					if ((value != null))
					{
						value.Cita.Add(this);
						this._id_medico = value.id_medico;
					}
					else
					{
						this._id_medico = default(Nullable<int>);
					}
					this.SendPropertyChanged("Medico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Cita", Storage="_Persona", ThisKey="id_person", OtherKey="id_person", IsForeignKey=true)]
		public Persona Persona
		{
			get
			{
				return this._Persona.Entity;
			}
			set
			{
				Persona previousValue = this._Persona.Entity;
				if (((previousValue != value) 
							|| (this._Persona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persona.Entity = null;
						previousValue.Cita.Remove(this);
					}
					this._Persona.Entity = value;
					if ((value != null))
					{
						value.Cita.Add(this);
						this._id_person = value.id_person;
					}
					else
					{
						this._id_person = default(Nullable<long>);
					}
					this.SendPropertyChanged("Persona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consulta(Consulta entity)
		{
			this.SendPropertyChanging();
			entity.Cita = this;
		}
		
		private void detach_Consulta(Consulta entity)
		{
			this.SendPropertyChanging();
			entity.Cita = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Especialidad")]
	public partial class Especialidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_especialidad;
		
		private string _nombre;
		
		private string _descripcion;
		
		private System.Nullable<decimal> _costo;
		
		private System.Nullable<int> _status;
		
		private EntitySet<Medico> _Medico;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_especialidadChanging(int value);
    partial void Onid_especialidadChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OncostoChanging(System.Nullable<decimal> value);
    partial void OncostoChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public Especialidad()
		{
			this._Medico = new EntitySet<Medico>(new Action<Medico>(this.attach_Medico), new Action<Medico>(this.detach_Medico));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_especialidad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_especialidad
		{
			get
			{
				return this._id_especialidad;
			}
			set
			{
				if ((this._id_especialidad != value))
				{
					this.Onid_especialidadChanging(value);
					this.SendPropertyChanging();
					this._id_especialidad = value;
					this.SendPropertyChanged("id_especialidad");
					this.Onid_especialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(100)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(255)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_costo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> costo
		{
			get
			{
				return this._costo;
			}
			set
			{
				if ((this._costo != value))
				{
					this.OncostoChanging(value);
					this.SendPropertyChanging();
					this._costo = value;
					this.SendPropertyChanged("costo");
					this.OncostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidad_Medico", Storage="_Medico", ThisKey="id_especialidad", OtherKey="id_especialidad")]
		public EntitySet<Medico> Medico
		{
			get
			{
				return this._Medico;
			}
			set
			{
				this._Medico.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Medico(Medico entity)
		{
			this.SendPropertyChanging();
			entity.Especialidad = this;
		}
		
		private void detach_Medico(Medico entity)
		{
			this.SendPropertyChanging();
			entity.Especialidad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persona")]
	public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_person;
		
		private string _dni;
		
		private string _nombre;
		
		private string _apellido;
		
		private string _email;
		
		private string _telefono;
		
		private System.Nullable<int> _edad;
		
		private System.Nullable<decimal> _peso;
		
		private System.Nullable<decimal> _altura;
		
		private string _sangre;
		
		private System.Nullable<System.DateTime> _fnac;
		
		private string _ecivil;
		
		private string _direccion;
		
		private int _tipo;
		
		private System.Nullable<int> _status;
		
		private EntitySet<Medico> _Medico;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntitySet<Cita> _Cita;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_personChanging(long value);
    partial void Onid_personChanged();
    partial void OndniChanging(string value);
    partial void OndniChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnedadChanging(System.Nullable<int> value);
    partial void OnedadChanged();
    partial void OnpesoChanging(System.Nullable<decimal> value);
    partial void OnpesoChanged();
    partial void OnalturaChanging(System.Nullable<decimal> value);
    partial void OnalturaChanged();
    partial void OnsangreChanging(string value);
    partial void OnsangreChanged();
    partial void OnfnacChanging(System.Nullable<System.DateTime> value);
    partial void OnfnacChanged();
    partial void OnecivilChanging(string value);
    partial void OnecivilChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntipoChanging(int value);
    partial void OntipoChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public Persona()
		{
			this._Medico = new EntitySet<Medico>(new Action<Medico>(this.attach_Medico), new Action<Medico>(this.detach_Medico));
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._Cita = new EntitySet<Cita>(new Action<Cita>(this.attach_Cita), new Action<Cita>(this.detach_Cita));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_person", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_person
		{
			get
			{
				return this._id_person;
			}
			set
			{
				if ((this._id_person != value))
				{
					this.Onid_personChanging(value);
					this.SendPropertyChanging();
					this._id_person = value;
					this.SendPropertyChanged("id_person");
					this.Onid_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dni", DbType="VarChar(13)")]
		public string dni
		{
			get
			{
				return this._dni;
			}
			set
			{
				if ((this._dni != value))
				{
					this.OndniChanging(value);
					this.SendPropertyChanging();
					this._dni = value;
					this.SendPropertyChanged("dni");
					this.OndniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(100)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(100)")]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(150)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(100)")]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edad", DbType="Int")]
		public System.Nullable<int> edad
		{
			get
			{
				return this._edad;
			}
			set
			{
				if ((this._edad != value))
				{
					this.OnedadChanging(value);
					this.SendPropertyChanging();
					this._edad = value;
					this.SendPropertyChanged("edad");
					this.OnedadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peso", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> peso
		{
			get
			{
				return this._peso;
			}
			set
			{
				if ((this._peso != value))
				{
					this.OnpesoChanging(value);
					this.SendPropertyChanging();
					this._peso = value;
					this.SendPropertyChanged("peso");
					this.OnpesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_altura", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> altura
		{
			get
			{
				return this._altura;
			}
			set
			{
				if ((this._altura != value))
				{
					this.OnalturaChanging(value);
					this.SendPropertyChanging();
					this._altura = value;
					this.SendPropertyChanged("altura");
					this.OnalturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sangre", DbType="VarChar(10)")]
		public string sangre
		{
			get
			{
				return this._sangre;
			}
			set
			{
				if ((this._sangre != value))
				{
					this.OnsangreChanging(value);
					this.SendPropertyChanging();
					this._sangre = value;
					this.SendPropertyChanged("sangre");
					this.OnsangreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fnac", DbType="Date")]
		public System.Nullable<System.DateTime> fnac
		{
			get
			{
				return this._fnac;
			}
			set
			{
				if ((this._fnac != value))
				{
					this.OnfnacChanging(value);
					this.SendPropertyChanging();
					this._fnac = value;
					this.SendPropertyChanged("fnac");
					this.OnfnacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ecivil", DbType="VarChar(100)")]
		public string ecivil
		{
			get
			{
				return this._ecivil;
			}
			set
			{
				if ((this._ecivil != value))
				{
					this.OnecivilChanging(value);
					this.SendPropertyChanging();
					this._ecivil = value;
					this.SendPropertyChanged("ecivil");
					this.OnecivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(255)")]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="Int NOT NULL")]
		public int tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Medico", Storage="_Medico", ThisKey="id_person", OtherKey="id_person")]
		public EntitySet<Medico> Medico
		{
			get
			{
				return this._Medico;
			}
			set
			{
				this._Medico.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Usuario", Storage="_Usuario", ThisKey="id_person", OtherKey="id_person")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persona_Cita", Storage="_Cita", ThisKey="id_person", OtherKey="id_person")]
		public EntitySet<Cita> Cita
		{
			get
			{
				return this._Cita;
			}
			set
			{
				this._Cita.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Medico(Medico entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Medico(Medico entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
		
		private void attach_Cita(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Persona = this;
		}
		
		private void detach_Cita(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Persona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol_Permiso")]
	public partial class Rol_Permiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id_rolper;
		
		private System.Nullable<int> _id_rol;
		
		private System.Nullable<int> _id_permiso;
		
		private EntityRef<Permisos> _Permisos;
		
		private EntityRef<Rol> _Rol;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rolperChanging(long value);
    partial void Onid_rolperChanged();
    partial void Onid_rolChanging(System.Nullable<int> value);
    partial void Onid_rolChanged();
    partial void Onid_permisoChanging(System.Nullable<int> value);
    partial void Onid_permisoChanged();
    #endregion
		
		public Rol_Permiso()
		{
			this._Permisos = default(EntityRef<Permisos>);
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rolper", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id_rolper
		{
			get
			{
				return this._id_rolper;
			}
			set
			{
				if ((this._id_rolper != value))
				{
					this.Onid_rolperChanging(value);
					this.SendPropertyChanging();
					this._id_rolper = value;
					this.SendPropertyChanged("id_rolper");
					this.Onid_rolperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int")]
		public System.Nullable<int> id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_permiso", DbType="Int")]
		public System.Nullable<int> id_permiso
		{
			get
			{
				return this._id_permiso;
			}
			set
			{
				if ((this._id_permiso != value))
				{
					if (this._Permisos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_permisoChanging(value);
					this.SendPropertyChanging();
					this._id_permiso = value;
					this.SendPropertyChanged("id_permiso");
					this.Onid_permisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permisos_Rol_Permiso", Storage="_Permisos", ThisKey="id_permiso", OtherKey="id_permiso", IsForeignKey=true)]
		public Permisos Permisos
		{
			get
			{
				return this._Permisos.Entity;
			}
			set
			{
				Permisos previousValue = this._Permisos.Entity;
				if (((previousValue != value) 
							|| (this._Permisos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permisos.Entity = null;
						previousValue.Rol_Permiso.Remove(this);
					}
					this._Permisos.Entity = value;
					if ((value != null))
					{
						value.Rol_Permiso.Add(this);
						this._id_permiso = value.id_permiso;
					}
					else
					{
						this._id_permiso = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permisos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Rol_Permiso", Storage="_Rol", ThisKey="id_rol", OtherKey="id_rol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.Rol_Permiso.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.Rol_Permiso.Add(this);
						this._id_rol = value.id_rol;
					}
					else
					{
						this._id_rol = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rol;
		
		private string _nombre_rol;
		
		private System.Nullable<int> _status;
		
		private EntitySet<Usuario> _Usuario;
		
		private EntitySet<Rol_Permiso> _Rol_Permiso;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    partial void Onnombre_rolChanging(string value);
    partial void Onnombre_rolChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public Rol()
		{
			this._Usuario = new EntitySet<Usuario>(new Action<Usuario>(this.attach_Usuario), new Action<Usuario>(this.detach_Usuario));
			this._Rol_Permiso = new EntitySet<Rol_Permiso>(new Action<Rol_Permiso>(this.attach_Rol_Permiso), new Action<Rol_Permiso>(this.detach_Rol_Permiso));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_rol", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre_rol
		{
			get
			{
				return this._nombre_rol;
			}
			set
			{
				if ((this._nombre_rol != value))
				{
					this.Onnombre_rolChanging(value);
					this.SendPropertyChanging();
					this._nombre_rol = value;
					this.SendPropertyChanged("nombre_rol");
					this.Onnombre_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Usuario", Storage="_Usuario", ThisKey="id_rol", OtherKey="id_rol")]
		public EntitySet<Usuario> Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				this._Usuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Rol_Permiso", Storage="_Rol_Permiso", ThisKey="id_rol", OtherKey="id_rol")]
		public EntitySet<Rol_Permiso> Rol_Permiso
		{
			get
			{
				return this._Rol_Permiso;
			}
			set
			{
				this._Rol_Permiso.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_Usuario(Usuario entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
		
		private void attach_Rol_Permiso(Rol_Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_Rol_Permiso(Rol_Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
}
#pragma warning restore 1591
